<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
	default-init-method="init">

	<bean id="stopAreaJdbcDao" class="fr.certu.chouette.jdbc.dao.StopAreaJdbcDao"
		parent="abstractJdbcDao">
		<property name="sqlSelectAll">
			<value>SELECT * FROM ${database.schema}.stop_areas</value>
		</property>
		<property name="sqlPurge1">
			<value>
				DELETE FROM ${database.schema}.stop_areas WHERE area_type IN
				('BoardingPosition','Quay') AND (id NOT IN (SELECT distinct
				stop_area_id FROM ${database.schema}.stop_points))
			</value>
		</property>
		<property name="sqlPurge2">
			<value>
				DELETE FROM ${database.schema}.stop_areas s WHERE s.area_type =
				'CommercialStopPoint' AND NOT (EXISTS (SELECT p.parent_id FROM
				${database.schema}.stop_areas p WHERE p.parent_id = s.id))
			</value>
		</property>
		<property name="sqlPurge3">
			<value>
				DELETE FROM ${database.schema}.stop_areas s WHERE s.area_type =
				'StopPlace' AND NOT (EXISTS (SELECT p.parent_id FROM
				${database.schema}.stop_areas p WHERE p.parent_id = s.id))
			</value>
		</property>
		<property name="sqlPurge4">
			<value>
				DELETE FROM ${database.schema}.stop_areas s WHERE s.area_type =
				'ITL' AND NOT (EXISTS (SELECT p.parent_id FROM
				${database.schema}.stop_areas p WHERE p.parent_id = s.id))
			</value>
		</property>
		<property name="sqlInsert">
			<value>
				INSERT INTO ${database.schema}.stop_areas
				(
				parent_id,
				objectid,
				object_version,
				creation_time,
				creator_id,
				name,
				COMMENT,
				area_type,
				registration_number,
				nearest_topic_name,
				fare_code,
				longitude,
				latitude,
				long_lat_type,
				x,
				y,
				projection_type,
				country_code,
				street_name
				)
				VALUES(?, ?,
				?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
			</value>
		</property>
		<property name="sqlSelectByObjectId">
			<value>
				SELECT * FROM ${database.schema}.stop_areas WHERE objectid = ?
			</value>
		</property>
		<property name="sqlSelectByObjectIdWithInClause">
			<value>
				SELECT id,objectid FROM ${database.schema}.stop_areas WHERE
				objectid IN (_OBJECTIDS_)
			</value>
		</property>
		<property name="sqlUpdate">
			<value>
				UPDATE ${database.schema}.stop_areas
				SET
				parent_id = ?,
				objectid = ?,
				object_version = ?,
				creation_time = ?,
				creator_id = ?,
				name = ?,
				COMMENT = ?,
				area_type = ?,
				registration_number = ?,
				nearest_topic_name = ?,
				fare_code = ?,
				longitude = ?,
				latitude = ?,
				long_lat_type = ?,
				x = ?,
				y = ?,
				projection_type = ?,
				country_code = ?,
				street_name = ?
				WHERE objectid = ?
			</value>
		</property>
		<property name="collectionAttributes">
			<map>
				<description>one entry for each attribute</description>
				<entry key="stopAreaStopArea">
					<map>
						<description>one entry for select, insert, delete</description>
						<entry key="sqlSelectById">
							<value>
								SELECT * FROM ${database.schema}.stop_areas_stop_areas WHERE
								child_id = ? 
								</value>
						</entry>
						<entry key="sqlInsert">
							<value>
								INSERT INTO ${database.schema}.stop_areas_stop_areas
								(
								parent_id,
								child_id
								)
								VALUES(?, ?)
								</value>
						</entry>
						<entry key="sqlDelete">
							<value>
								DELETE FROM ${database.schema}.stop_areas_stop_areas WHERE
								child_id IN (_IDS_)
								 </value>
						</entry>
					</map>
				</entry>
				<entry key="routingconstraints">
					<map>
						<description>one entry for select, insert, delete</description>
						<entry key="sqlSelectById">
							<value>
								SELECT * FROM ${database.schema}.routing_constraints_lines WHERE
								stop_area_id = ? 
								</value>
						</entry>
						<entry key="sqlInsert">
							<value>
								INSERT INTO ${database.schema}.routing_constraints_lines
								(
								line_id,
								stop_area_id
								)
								VALUES(?, ?)
								</value>
						</entry>
						<entry key="sqlDelete">
							<value>
								DELETE FROM ${database.schema}.routing_constraints_lines WHERE
								stop_area_id IN (_IDS_)
								 </value>
						</entry>
					</map>
				</entry>
			</map>
		</property>
	</bean>
</beans>	